{"/Scripts/rtk_lib":{"title":"Retake Library","data":{"":"A standalone library, importable and exportable code used in Retake Studio resources.","installation#Installation":"","download-a-release-from-the-github-repository#Download a release from the GitHub repository.":"","configuration#Configuration":"Resource configuration uses convars:\nsetr rtk_lib:locale en","usage#Usage":"To use the library, you need to import it into your resource's fxmanifest.lua :\nshared_script '@rtk_lib/import.lua'\nOr if you have multiple shared scripts :\nshared_scripts {\n    '@rtk_lib/import.lua',\n}","providers#Providers":"When you import the library into your script, you don't need to import oxmysql because it's already included in the library.\nWe also provide functions for ESX, QB/QBox, and even your own framework (more details to come).\nWe are also working on provider functions for inventory scripts."}},"/Scripts/rtk_lib/emit/client":{"title":"Client","data":{"":"todo"}},"/Scripts/rtk_lib/emit/server":{"title":"Server","data":{"":"todo"}},"/Scripts/rtk_lib/exports/shared":{"title":"EXPORTS Shared","data":{"exports#Exports":"rtk.exports - Play exports function in other resource.\ntype: function\nparameters:\nresourceName.methodName: string - Name of resource with method name.\n...: unknown - Arguments to pass to the method.\nreturn: unknown\nrtk.exports('resourceName.methodName', 'Hello, World!')\nrtk.exports.class todo"}},"/Scripts/rtk_lib/json/client":{"title":"JSON Client","data":{"load-json-file#Load JSON File":"rtk.json.load - Is a function that allows you to load a JSON file from the resource folder.\ntype: function\nparameters:\nfilePath: string - The name of the file to load.\nresourceName?: string - The name of the resource to load the file from.\nreturn: table\nlocal data <const> = rtk.json.load('data.fileName')\nprint(data) -- output: { hello = \"world\" }"}},"/Scripts/rtk_lib/json/server":{"title":"JSON Server","data":{"save-json-file#Save JSON File":"rtk.json.save - Is a function that allows you to save a table to a JSON file in the resource folder.\ntype: function\nparameters:\nfilePath: string - The name of the file to save.\ndata: table - The data to save.\nresourceName?: string - The name of the resource to save the file to.\ndataLength?: number - The length of the data to save.\nreturn: boolean\nrtk.json.save('data.fileName', { hello = \"world\" })","load-json-file#Load JSON File":"rtk.json.load is a function that allows you to load a JSON file from the resource folder.\ntype: function\nparameters:\nfilePath: string - The name of the file to load.\nresourceName?: string - The name of the resource to load the file from.\nreturn: table\nlocal data <const> = rtk.json.load('data.fileName')\nprint(data) -- output: { hello = \"world\" }"}},"/Scripts/rtk_lib/on/client":{"title":"On Client","data":{"on-listener#On Listener":"rtk.on - Is a function that allows you to listen to events.\ntype: function as AddEventHandler\nparameters:\nname: string - The name of the event to listen to.\ncallback: fun(...: unknown) - The function to call when the event is triggered.\nreturn: void\nrtk.on('eventName', function(...) \n    print('event triggered', ...)\nend)","on-netowrk-register-with-listener#On Netowrk Register with Listener":"rtk.on.net - Is a function that allows you to listen to network events.\ntype: function as RegisterNetEvent\nparameters:\nname: string - The name of the event to listen to.\ncallback?: fun(...: unknown) - The function to call when the event is triggered.\nreturn: void\nrtk.on.net('eventName', function(...) \n    print('event triggered', ...)\nend)","on-player-register-with-listener#On Player Register with Listener":"rtk.on.player - Is a function that allows you to listen to player events.\nRefer to the key fields of the player here.\ntype: function\nparameters:\nkey: string - The field to listen to.\ncallback: fun(value: any) - The function to call when the field changes.\nreturn: void\nrtk.on.player('ped', function(value) \n    print('old value: '..player.ped, 'new value: '..value) \nend)"}},"/Scripts/rtk_lib/on/server":{"title":"Server","data":{"":"todo"}},"/Scripts/rtk_lib/player/client":{"title":"Player Client","data":{"player-variables-global#Player variables global":"player - Is a global variable that contains information about the player.\ntype: table\nfields:\nid: number - The player's id PlayerId.\nserverid: number - The player's server ID GetPlayerServerId.\nped: number - The player's ped PlayerPedId.\nweapon: number | false - The player's weapon GetCurrentPedWeapon.\nvehicle: number | false - The player's vehicle GetVehiclePedIsIn.\nseat: number | false - The player's seat GetPedInVehicleSeat.\nprint(player.id)\nprint(player.serverid)\nprint(player.ped)\nprint(player.weapon)\nprint(player.vehicle)\nprint(player.seat)","player-events#Player events":"That use on module to listen to player events.\nrtk.on.player - Is a function that allows you to listen to player events.\ntype: function\nparameters:\nkey: string - The field to listen to.\ncallback: fun(value: any) - The function to call when the field changes.\nreturn: void\nrtk.on.player('ped', function(value) \n    print('old value: '..player.ped, 'new value: '..value) \nend)"}},"/Scripts/rtk_lib/requestModel/client":{"title":"RequestModel Client","data":{"load-requestmodel#Load RequestModel":"rtk.requestModel - Load a RequestModel\ntype: function\nparameters:\nmodel: string - Name of the RequestModel to load.\ntimeout?: number - Time in milliseconds to wait for the RequestModel to load.\nreturn: number\nlocal model <const> = rtk.requestModel('adder')"}},"/Scripts/rtk_lib/resetFocus/client":{"title":"Reset NUI Focus","data":{"reset-focus#Reset Focus":"rtk.resetFocus - Is a function that allows you to reset the focus of the NUI.\ntype: function\nreturn: void\nrtk.resetFocus()"}},"/Scripts/rtk_lib/sendReactMessage/client":{"title":"SendReactMessage Client","data":{"send-react-message#Send React Message":"rtk.sendReactMessage - Is a function that allows you to send a message to a React interface.\ntype: function\nparameters:\nvalue: table\naction: string\ndata?: any\noptions? : table\nfocus?: boolean | { [1]: boolean, [2]: boolean } - Focus\nlocations?: string | vec2 | { [x]: number, [y]: number } | { number, number } - Location\nstring as top-left, top-right, bottom-left, bottom-right or center\nkeepInput?: boolean  - Keep input\nreturn: void\nrtk.sendReactMessage({\n    action = \"example\",\n    data = { message = \"Hello, World!\" }\n}, {\n    focus = true,\n    locations = 'center',\n    keepInput = true\n})"}},"/Scripts/rtk_lib/string/shared":{"title":"String Shared","data":{"starts#Starts":"rtk.string.starts - Check if a string starts with a specific string.\ntype: function\nparameters:\nstr: string - The string to check.\nstart: string - The string to check if the str starts with.\nreturn: boolean\nlocal str <const> = 'Hello, World!'\nprint(rtk.string.starts(str, 'Hello')) -- output: true","first-to-upper#First To Upper":"rtk.string.firstToUpper - Convert the first character of a string to uppercase.\ntype: function\nparameters:\nstr: string - The string to convert.\nreturn: string\nlocal str <const> = 'hello, world!'\nprint(rtk.string.firstToUpper(str)) -- output: 'Hello, world!'","random-string#Random String":"rtk.string.random - Generate a random string.\ntype: function\nparameters:\nlength: number - The length of the random string.\ndata?: table - The data to generate the random string.\nupperCase: boolean - Include uppercase characters.\nlowerCase: boolean - Include lowercase characters.\nnumbers: boolean - Include numbers.\nsymbols: boolean - Include special characters.\nreturn: string\nlocal str <const> = rtk.string.random(10)\nprint(str) -- output: 'aBcD1!2@3#'\nOr you can specify the data to generate the random string.\nlocal str <const> = rtk.string.random(10, { upperCase = true, numbers = true, symbols = true })\nprint(str) -- output: 'A1!2@3#4DC'","uuid#UUID":"rtk.string.uuid - Generate a UUID.\ntype: function\nreturn: string\nlocal uuid <const> = rtk.string.uuid()\nprint(uuid) -- output: '550e8400-e29b-41d4-a716-446655440000'"}},"/Scripts/rtk_lib/table/shared":{"title":"Table Shared","data":{"clone-table#Clone Table":"rtk.table.clone - Clone a table.\ntype: function\nparameters:\ntable: table - Table to clone.\nreturn: table\nlocal data <const> = rtk.table.clone({ hello = \"world\" })\nprint(data) -- output: { hello = \"world\" }","contains-value#Contains Value":"rtk.table.contains - Check if a table contains a specific value.\ntype: function\nparameters:\ntable: table - Table to check.\nvalue: any - Value to check if the table contains.\nreturn: boolean\nlocal data <const> = { hello = \"world\", rtk = \"table\" }\nprint(rtk.table.contains(data, \"world\")) -- output: true","to-vector3#To Vector3":"rtk.table.toVec3 - Convert a table to a Vector3.\ntype: function\nparameters:\ncoords: table - Table to convert.\nreturn: vec3\nlocal data <const> = rtk.table.toVec3({ x = 1, y = 2, z = 3 })\nprint(data) -- output: vec3(1, 2, 3)","to-vector4#To Vector4":"rtk.table.toVec4 - Convert a table to a Vector4.\ntype: function\nparameters:\ncoords: table - Table to convert.\nreturn: vec4\nlocal data <const> = rtk.table.toVec4({ x = 1, y = 2, z = 3, h = 4 })\nprint(data) -- output: vec4(1, 2, 3, 4)"}},"/Scripts/rtk_lib/version/server":{"title":"Version Script","data":{"":"Your resource must have a version in the fxmanifest.lua file.\nrtk.version - Get the version of the resource.\ntype: function\nparameters:\nurl: string - The URL of the resource.\ntimer?: number - The time in milliseconds to wait for the version.\nisBeta?: boolean - If the version is beta.\ncallback?: fun(resp: table) - The function callback passing the response.\nreturn: void","use-github#Use Github":"github argument get the version of the resource from Github.\nYour repository must have a releases page and name of the repository must be the same as the resource name.\nrtk.version('github')","use-url#Use URL":"url argument get the version of the resource from a URL.\nrtk.version('https://example.com/version.json', 1000, nil, function(resp)\n    print(json.encode(resp, { indent = true, sort_keys = true }))\nend)"}},"/Scripts/rtk_shop/Todo":{"title":"Todo list","data":{}},"/":{"title":"Welcome to Retake Studio","data":{"about-our-shop#About Our Shop":"Founded in 2022, Retake Studio is your trusted partner for high-quality MLO (Mapped Local Objects) and innovative scripts for FiveM. Our passion is to create immersive environments and features that significantly enhance the gaming experience on your server.","our-offerings#Our Offerings":"At Retake Studio, we offer a carefully curated range of products to meet your specific needs:","mlo-mappings#MLO (Mappings):":"Journalist in Paleto Bay: A realistic workspace for media roles. ↗ soon\nLuxury Autos Dealership: A high-end car dealership for luxury vehicle enthusiasts. ↗\nSecret Illegal Warehouse: A clandestine warehouse perfect for underground activities. ↗\nRemake 24/7 SUPERMARKETS: A modern reinvention of the iconic convenience stores. ↗\nRemake Binco: An updated version of the famous clothing store. ↗\nDesert PitStop: An essential stop in the middle of the desert. ↗\nDynasty 8: A reimagined real estate agency to enrich gameplay. ↗","scripts#Scripts:":"Modern and Minimalist HUD: An elegant and unobtrusive user interface. ↗ soon\nAdvanced Shop 24/7: An enhanced shop system for a more immersive shopping experience. ↗\nRemake NXG Inventory - [Ox-Inventory]: A revamp of the popular inventory system, optimized for better performance. ↗\nWhat sets us apart? Our meticulous attention to detail, advanced optimization of our resources for maximum performance, and our commitment to creating products that seamlessly integrate into the FiveM universe.","rules-and-terms-of-use#Rules and Terms of Use":"Respect and Courtesy: We require respectful behavior towards all members and the Retake Studio team, in accordance with Article 225-1 of the French Penal Code regarding discrimination.\nPersonal Data Protection: Your information is processed in compliance with GDPR (EU 2016/679) and will never be shared without your explicit consent.\nAdvertising Prohibition: Any unauthorized advertising for other servers, shops, or services is strictly prohibited.\nSales and Exchanges: Only Retake Studio products can be sold on this server, in compliance with distance selling laws (Articles L221-1 to L221-28 of the French Consumer Code).\nSales Conditions: Purchased scripts are non-exchangeable and non-refundable, except in cases of proven technical defects.\nIntellectual Property: Any unauthorized sharing or resale of purchased scripts and resources is strictly prohibited, in accordance with the French Intellectual Property Code.\nSupport and Assistance: Use the appropriate channels to request help. Our team is here to respond to you as quickly as possible.\nAppropriate Ticket Usage: Support tickets are exclusively reserved for assistance requests regarding Retake Studio products and services.","customer-support#Customer Support":"Our dedicated support team is available:\nDiscord: Discord ↗\nEmail: support@retakestudio.com\nWe offer free technical assistance for 30 days after purchase and regular updates of our products to ensure their compatibility and optimal performance.","useful-links#Useful Links":"Complete catalog of our products\nJoin our Discord community\nFollow us on Youtube","our-partners#Our Partners":"At Retake Studio, we are proud to collaborate with trusted partners to offer you high-quality complementary services.\nWe carefully select our partners to ensure services that meet our high standards of quality and performance.","ready-to-transform-your-server#Ready to Transform Your Server?":"Discover how our unique MLOs and optimized scripts can elevate your FiveM server to the next level. Whether you're looking to add a luxury car dealership, improve your convenience stores, or optimize your inventory system, Retake Studio has the solution you need.By using our services, you agree to comply with these rules and conditions. We reserve the right to modify these rules at any time to ensure the best possible experience for all our users."}}}